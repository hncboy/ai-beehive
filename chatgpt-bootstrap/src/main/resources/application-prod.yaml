spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${MYSQL_USER_NAME:root}
    password: ${MYSQL_PASSWORD:123456}
    url: ${JDBC_URL:jdbc:mysql://localhost:3309/chat?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true}
  data:
    redis:
      database: 1
      host: 127.0.0.1
      port: 6376
      password: ${REDIS_PASSWORD:123456}
      timeout: 10s
      lettuce:
        pool:
          max-active: 200
          max-wait: -1ms
          max-idle: 10
          min-idle: 0

#mybatis-plus:
#  configuration:
#    # 控制台打印 SQL
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

chat:
  # OpenAI API Key - https://platform.openai.com/account/api-keys
  openai_api_key: ${CHAT_OPENAI_API_KEY:}
  # change this to an `accessToken` extracted from the ChatGPT site's `https://chat.openai.com/api/auth/session` response
  openai_access_token: ${CHAT_OPENAI_ACCESS_TOKEN:}
  # OpenAI API Base URL - https://api.openai.com/，要加/后缀
  openai_api_base_url: ${CHAT_OPENAI_API_BASE_URL:https://api.openai.com/}
  # API Model - https://platform.openai.com/docs/models apiKey 和 AccessToken mode 不一样
  openai_api_model: ${CHAT_OPENAI_API_MODEL:}
  # 反向代理地址 AccessToken 时使用
  api_reverse_proxy: ${CHAT_API_REVERSE_PROXY:}
  # 超时毫秒
  timeout_ms: ${CHAT_TIMEOUT_MS:100000}
  # HTTP 代理
  http_proxy_host: ${CHAT_HTTP_PROXY_HOST:127.0.0.1}
  # HTTP 代理
  http_proxy_port: ${CHAT_HTTP_PROXY_PORT:}
  # 管理端账号
  admin_account: ${CHAT_ADMIN_ACCOUNT:admin}
  # 管理端密码
  admin_password: ${CHAT_ADMIN_PASSWORD:admin}
  # 全局时间内最大请求次数
  maxRequest: ${CHAT_MAX_REQUEST:}
  # 全局最大请求时间间隔（秒）
  maxRequestSecond: ${CHAT_MAX_REQUEST_SECOND:}
  # ip 时间内最大请求次数
  ipMaxRequest: ${CHAT_IP_MAX_REQUEST:}
  # ip 最大请求时间间隔（秒）
  ipMaxRequestSecond: ${CHAT_IP_MAX_REQUEST_SECOND:}
  # 限制上下文对话的数量
  limitQuestionContextCount: ${CHAT_LIMIT_QUESTION_CONTEXT_COUNT:}

# 邮箱验证相关
email:
  # SMTP服务器地址
  host: ${EMAIL_HOST:xxxxxx}
  # 服务器一般默认 25 端口
  port: ${EMAIL_PORT:25}
  # 邮箱地址
  from: ${EMAIL_FROM:xxxxxx}
  # 用户名，发件人前缀
  user: ${EMAIL_USER:xxxxxx}
  # 如果要授权码，这里就是传授权码
  pass: ${EMAIL_PASS:}
  # 是否需要授权，决定是否要设置授权码
  auth: ${EMAIL_AUTH:true}
  # 邮箱验证码有效期（单位，分钟）
  verifyCodeExpireMinutes: ${EMAIL_CODE_EXPIRE_MINUTES:15}
  # 邮箱验证，跳转地址路径
  verificationRedirectUrl: ${EMAIL_VERIFY_REDIRECT_URL:http://localhost:1002/#/emailValidation?type=email&verifyCode=}
sa-token:
  # 前端用户登录，用于加密 JWT
  jwt-secret-key: ${JWT_SECRET:StarGPT}
  # JWT 有效期
  timeout: ${LOGIN_TIMEOUT_SECONDS:86400}
  token-name: satoken